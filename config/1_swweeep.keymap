#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer Defines
#define DEFAULT 0
#define SYM     1
#define NAV     2
#define FUNC    3

/ {
    // Custom behaviors to fine-tune hold-tap settings for specific use cases.
    // `hm` uses 'tap-preferred' for home row mods, and `lt_sym_gui` is isolated for independent thumb key tuning.
    behaviors {
        // Hold-Tap for Home Row Mods (Ctrl, Alt)
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // Layer-Tap for Thumb Keys
        lt_sym_gui: layer_tap_sym_gui {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_SYM_GUI";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        // Combo to enter bootloader mode (Top-Left + Bottom-Left keys)
        combo_bootloader {
            timeout-ms = <50>;
            key-positions = <0 15>;
            bindings = <&bootloader>;
        };
        // Combo to reset the keyboard (Top-Right + Bottom-Right keys)
        combo_reset {
            timeout-ms = <50>;
            key-positions = <14 29>;
            bindings = <&sys_reset>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W      &hm LALT E    &hm LCTL R    &kp T         &kp Y      &hm RCTL U    &hm RALT I    &kp O      &kp P
&kp A      &kp S      &kp D         &kp F         &kp G         &kp H      &kp J         &kp K         &kp L      &kp SEMI
&kp Z      &kp X      &kp C         &kp V         &kp B         &kp N      &kp M         &kp COMMA     &kp DOT    &kp SLASH
                                    &lt NAV TAB   &kp BSPC      &kp LSHFT  &lt_sym_gui SYM LGUI  &kp RET    &kp SPACE
            >;
        };

        sym_layer {
            bindings = <
&kp EXCL   &kp AT     &kp HASH      &kp DLLR      &kp PRCNT     &kp CARET  &kp AMPS      &kp ASTRK     &kp LPAR   &kp RPAR
&kp N1     &kp N2     &kp N3        &kp N4        &kp N5        &kp N6     &kp N7        &kp N8        &kp N9     &kp N0
&kp GRAVE  &kp TILDE  &kp LBKT      &kp RBKT      &kp BSLH      &kp UNDER  &kp PLUS      &kp LBRC      &kp RBRC   &kp PIPE
                                    &trans        &trans        &trans     &trans        &trans        &trans
            >;
        };

        nav_layer {
            bindings = <
&kp HOME   &kp PG_UP  &kp UP        &kp PG_DN     &trans        &trans       &trans        &trans        &trans     &trans
&kp END    &kp LEFT   &kp DOWN      &kp RIGHT     &trans        &trans       &trans        &kp C_BRI_DN  &kp C_BRI_UP &trans
&trans     &trans     &trans        &trans        &trans        &trans       &trans        &trans        &trans     &trans
                                    &trans        &trans        &trans       &mo FUNC      &trans        &trans
            >;
        };

        func_layer {
            bindings = <
&kp F1     &kp F2     &kp F3        &kp F4        &kp F5        &kp F6     &kp F7        &kp F8        &kp F9     &kp F10
&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans     &trans        &trans        &trans     &kp F11
&bt BT_CLR &trans     &trans        &trans        &trans        &trans     &trans        &trans        &trans     &kp F12
                                    &trans        &trans        &trans     &trans        &trans        &trans
            >;
        };
    };
};
